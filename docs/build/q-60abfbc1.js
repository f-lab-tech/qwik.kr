import{i as n,u as i}from"./q-c0df5510.js";const d=[{text:"Why <Slot>?",id:"why-slot",level:2},{text:"Example",id:"example",level:3}],r={title:"Projection",meta:[],styles:[],links:[]},h={title:"Projection"};function o(t){const e=Object.assign({p:"p",code:"code",h2:"h2",a:"a",span:"span",ol:"ol",li:"li",h3:"h3"},t.components);return n(i,{children:[n(e.p,{children:"Projection is a way of passing content to a child component that in turn controls where the content is rendered. Projection is a collaboration between the parent and child component. The parent component decides what is the content that needs to be rendered, child component decides where and if the content should be rendered."}),`
`,n(e.p,{children:["In our example, the content of the ",n(e.code,{children:"<Panel>"})," element (inside the ",n(e.code,{children:"<App>"}),") is the content that needs to be projected. The ",n(e.code,{children:"<Panel>"})," component wraps the content in a ",n(e.code,{children:"<div>"})," tag and should project it using the ",n(e.code,{children:"<Slot>"})," element."]}),`
`,n(e.h2,{id:"why-slot",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#why-slot",children:n(e.span,{className:"icon icon-link"})}),"Why ",n(e.code,{children:"<Slot>"}),"?"]}),`
`,n(e.p,{children:["Why is Qwik opting to use ",n(e.code,{children:"<Slot/>"})," rather than ",n(e.code,{children:"children"})," property? The use of ",n(e.code,{children:"<Slot>"})," is a strategic choice to enable the rendering of components out of order. (Meaning that a component should be capable of re-rendering even if the parent component is not yet resumed.) There are two issues with using ",n(e.code,{children:"children"})," in Qwik."]}),`
`,n(e.ol,{children:[`
`,n(e.li,{children:["If Qwik would use the ",n(e.code,{children:"children"})," property for projection the ",n(e.code,{children:"children"})," property would need to be serializable. This is because when the child component renders it needs the ",n(e.code,{children:"children"})," to insert someplace."]}),`
`,n(e.li,{children:["A child component could modify the contents of the ",n(e.code,{children:"children"})," before passing and inserting it into the render tree. This would prevent the parent component from rendering independently from the child. If a child would modify the children, then every time the parent component would change the ",n(e.code,{children:"children"})," Qwik would have to re-run the child component to see what kind of modifications it would make to the ",n(e.code,{children:"children"})," before inserting them into the render tree."]}),`
`]}),`
`,n(e.p,{children:["For Qwik, the ",n(e.code,{children:"<Slot>"})," approach is preferable because it declaratively controls the content and location of the projection. This allows the parent component to change the projection content, without forcing the child component to re-render."]}),`
`,n(e.h3,{id:"example",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#example",children:n(e.span,{className:"icon icon-link"})}),"Example"]}),`
`,n(e.p,{children:["Change the ",n(e.code,{children:"<Panel>"})," component to project the ",n(e.code,{children:"<App>"})," content using the ",n(e.code,{children:"<Slot>"})," element."]}),`
`,n(e.p,{children:["Notice that the ",n(e.code,{children:"<App>"})," is re-render on button click, but the ",n(e.code,{children:"<Panel>"})," is not re-rendered on interaction. This is because ",n(e.code,{children:"<Slot/>"})," is declarative and allows Qwik to know where the content should be projected even if ",n(e.code,{children:"<Panel>"})," is not loaded."]})]})}function l(t={}){const{wrapper:e}=t.components||{};return e?n(e,Object.assign({},t,{children:n(o,t)})):o(t)}export{l as default,h as frontmatter,r as head,d as headings};
