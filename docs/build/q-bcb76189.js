import{i as n,u as r}from"./q-c0df5510.js";const c=[{text:"Prefetching and Caching with a Service Worker",id:"prefetching-and-caching-with-a-service-worker",level:1},{text:"Background Task",id:"background-task",level:2},{text:"Interactive Prefetching And Caching",id:"interactive-prefetching-and-caching",level:2},{text:"User Service Worker Code",id:"user-service-worker-code",level:2}],o={title:"Qwik City Prefetching and Caching with a Service Worker",meta:[],styles:[],links:[]},s={title:"Qwik City Prefetching and Caching with a Service Worker"};function i(t){const e=Object.assign({h1:"h1",a:"a",span:"span",p:"p",em:"em",h2:"h2",blockquote:"blockquote",ol:"ol",li:"li",code:"code",pre:"pre"},t.components);return n(r,{children:[n(e.h1,{id:"prefetching-and-caching-with-a-service-worker",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#prefetching-and-caching-with-a-service-worker",children:n(e.span,{className:"icon icon-link"})}),"Prefetching and Caching with a Service Worker"]}),`
`,n(e.p,{children:["Traditionally, a service worker is used to prefetch most, or all, of the bundles an application uses. ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers",children:"Service workers"})," are commonly seen only as a way to make an application work offline."]}),`
`,n(e.p,{children:["Qwik City, however, uses service workers quite differently to provide a powerful prefetching and caching strategy. Instead, the goal is not to download the entire application, but rather to use the service worker to dynamically prefetch what's ",n(e.em,{children:"possible"})," to execute. By ",n(e.em,{children:"not"})," prefetching the entire application, this free's up resources to only request the small parts of the app a user ",n(e.em,{children:"could"})," use for what the user has on their screen at that time."]}),`
`,n(e.h2,{id:"background-task",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#background-task",children:n(e.span,{className:"icon icon-link"})}),"Background Task"]}),`
`,n(e.p,{children:["An advantage of using a service worker is that it's also an extension of a ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API",children:"worker"}),", which runs in a background thread."]}),`
`,n(e.blockquote,{children:[`
`,n(e.p,{children:"Web Workers makes it possible to run a script operation in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down."}),`
`]}),`
`,n(e.p,{children:"By moving the prefetching and caching logic to a service worker (which is a worker), we're able to essentially run the code in a background task, in order to not interfere with the main UI thread. By not interfering with the main UI we're able to help improve the performance of the Qwik application for users."}),`
`,n(e.h2,{id:"interactive-prefetching-and-caching",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#interactive-prefetching-and-caching",children:n(e.span,{className:"icon icon-link"})}),"Interactive Prefetching And Caching"]}),`
`,n(e.p,{children:["Qwik itself should be configured to use the ",n(e.a,{href:"/docs/advanced/prefetching/",children:"prefetchEvent"})," implementation (which is also Qwik's default). When Qwik emits the ",n(e.a,{href:"/qwikcity/prefetching/overview/#prefetch-event",children:"qprefetch"})," event, the service worker registration actively forwards the prefetch event data to the installed and active service worker."]}),`
`,n(e.p,{children:["The service worker then prefetches and caches the requested bundles on demand. The main thread simply has to emit data of what bundles it may need, while the service worker is only focused on ensuring it has the bundles cached. To do this the service worker pre-populates the browser's ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Cache",children:"Cache"}),"."]}),`
`,n(e.ol,{children:[`
`,n(e.li,{children:"If the browser already has it cached? Great, do nothing!"}),`
`,n(e.li,{children:"If the browser hasn't already cached this bundle, then let's kick off the fetch request."}),`
`]}),`
`,n(e.p,{children:["Read more about ",n(e.a,{href:"/qwikcity/prefetching/request-response-cache/",children:"Caching Request and Response Pairs"}),"."]}),`
`,n(e.p,{children:["Additionally, the service worker ensures that multiple requests for the same bundle do not happen at the same time. More about this in the ",n(e.a,{href:"/qwikcity/prefetching/parallelizing-network-requests/",children:"Parallelizing Network Requests"})," documentation."]}),`
`,n(e.h2,{id:"user-service-worker-code",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#user-service-worker-code",children:n(e.span,{className:"icon icon-link"})}),"User Service Worker Code"]}),`
`,n(e.p,{children:["The service worker that is installed is still controlled entirely by the developer. For example, the source file ",n(e.code,{children:"src/routes/service-worker.ts"})," becomes ",n(e.code,{children:"/service-worker.js"}),", which is the script requested by the browser. Notice how it's place within ",n(e.code,{children:"src/routes"})," still follows the same directory based routing pattern."]}),`
`,n(e.p,{children:["Below is an example of a default ",n(e.code,{children:"src/routes/service-worker.ts"})," source file:"]}),`
`,n(e.pre,{children:n(e.code,{className:"language-ts",children:[n(e.span,{className:"token keyword",children:"import"})," ",n(e.span,{className:"token punctuation",children:"{"})," setupServiceWorker ",n(e.span,{className:"token punctuation",children:"}"})," ",n(e.span,{className:"token keyword",children:"from"})," ",n(e.span,{className:"token string",children:"'@builder.io/qwik-city/service-worker'"}),n(e.span,{className:"token punctuation",children:";"}),`

`,n(e.span,{className:"token function",children:"setupServiceWorker"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`

`,n(e.span,{className:"token function",children:"addEventListener"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token string",children:"'install'"}),n(e.span,{className:"token punctuation",children:","})," ",n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token punctuation",children:")"})," ",n(e.span,{className:"token operator",children:"=>"})," self",n(e.span,{className:"token punctuation",children:"."}),n(e.span,{className:"token function",children:"skipWaiting"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`

`,n(e.span,{className:"token function",children:"addEventListener"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token string",children:"'activate'"}),n(e.span,{className:"token punctuation",children:","})," ",n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token punctuation",children:")"})," ",n(e.span,{className:"token operator",children:"=>"})," self",n(e.span,{className:"token punctuation",children:"."}),"clients",n(e.span,{className:"token punctuation",children:"."}),n(e.span,{className:"token function",children:"claim"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`
`]})}),`
`,n(e.p,{children:["The source code for ",n(e.code,{children:"src/routes/service-worker.ts"})," can be modified by the developer however they'd like. This includes opting-in, or opting-out, of setting up Qwik City's service worker."]}),`
`,n(e.p,{children:["Notice that the ",n(e.code,{children:"setupServiceWorker()"})," function is imported from ",n(e.code,{children:"@builder.io/qwik-city/service-worker"})," and executed at the top of the source file. If, and where, this function is called can be modified by the developer. For example, the developer may want to handle the fetch requests first, in which case they'd add their own fetch listener above ",n(e.code,{children:"setupServiceWorker()"}),". Or if they didn't want to use Qwik City's service worker at all, they would just have to remove ",n(e.code,{children:"setupServiceWorker()"})," from the file."]}),`
`,n(e.p,{children:["Additionally, the default ",n(e.code,{children:"src/routes/service-worker.ts"})," file comes with an ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event",children:"install"})," and ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event",children:"activate"})," event listeners, each added at the bottom of the file. The callbacks provided are the recommended callbacks. However, the developer can modify these callbacks depending on their own app's requirements."]}),`
`,n(e.p,{children:["Another important note is that Qwik City's request intercepting is ",n(e.em,{children:"only"})," for Qwik bundles, it does not attempt to handle any requests which are not a part of its build."]}),`
`,n(e.p,{children:"So while Qwik City does provide a way to help prefetch and cache bundles, it does not take full control of the app's service worker. This still allows developers to add their service worker logic without conflicting with Qwik."})]})}function l(t={}){const{wrapper:e}=t.components||{};return e?n(e,Object.assign({},t,{children:n(i,t)})):i(t)}export{l as default,s as frontmatter,o as head,c as headings};
