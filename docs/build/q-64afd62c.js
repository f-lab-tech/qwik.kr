import{i as t,u as o}from"./q-c0df5510.js";const i=[{text:"Example",id:"example",level:3}],c={title:"Scoped Styling",meta:[],styles:[],links:[]},l={title:"Scoped Styling"};function s(n){const e=Object.assign({p:"p",code:"code",h3:"h3",a:"a",span:"span"},n.components);return t(o,{children:[t(e.p,{children:["In previous sections, we have discussed how styles can be loaded lazily as they are needed using ",t(e.code,{children:"useStyles$()"})," hook. Browser styles are global and apply to all DOM elements, for this reason, Qwik also provides a way to load styles that are specific to a specific component. This is achieved by generating a unique class for each component and then inserting that unique class id into the stylesheet."]}),`
`,t(e.p,{children:["Use ",t(e.code,{children:"useStylesScoped$()"})," to load and scope the style to a specific component only."]}),`
`,t(e.h3,{id:"example",children:[t(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#example",children:t(e.span,{className:"icon icon-link"})}),"Example"]}),`
`,t(e.p,{children:["In this example, there are two components both of which have a class with the same name. Because of that, the two styles collide which results in undesirable behavior. Use the ",t(e.code,{children:"useStylesScoped$()"})," hook to scope the styles to a specific component and fix the collision."]})]})}function h(n={}){const{wrapper:e}=n.components||{};return e?t(e,Object.assign({},n,{children:t(s,n)})):s(n)}export{h as default,l as frontmatter,c as head,i as headings};
