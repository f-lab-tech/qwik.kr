import{i as t,u as i}from"./q-c0df5510.js";const s={title:"Listening to document/window",meta:[],styles:[],links:[]},d={title:"Listening to document/window"};function n(o){const e=Object.assign({p:"p",code:"code"},o.components);return t(i,{children:[t(e.p,{children:["So far you've interacted with events emitted from a DOM element such as a ",t(e.code,{children:"<button>"}),", but what if you need to listen for global events?"]}),`
`,t(e.p,{children:["Common global events include the ",t(e.code,{children:"document"}),"'s ",t(e.code,{children:"mousemove"})," and the ",t(e.code,{children:"window"}),"'s ",t(e.code,{children:"scroll"})," event."]}),`
`,t(e.p,{children:["Qwik has the ",t(e.code,{children:"document:"})," and ",t(e.code,{children:"window:"})," namespace prefixes which allow you to listen to global events."]}),`
`,t(e.p,{children:["Open the browser's console and move your mouse over the text in the sample. Notice how moving the mouse logs the mouse position to the console. This logging only happens while moving the mouse over the text because the event is wired on the ",t(e.code,{children:"div"}),"'s ",t(e.code,{children:"onMouseMove"})," event. Attaching at this level stops event bubbling beyond the element's listener."]}),`
`,t(e.p,{children:"How would you adjust the code to log the mouse position at all times?"}),`
`,t(e.p,{children:["Change to a global listener by adding the ",t(e.code,{children:"document:"})," prefix to the ",t(e.code,{children:"onMouseMove"})," declaration."]}),`
`,t(e.p,{children:"With this change, notice how moving the mouse anywhere on the application (even outside of the text) shows output in the console."})]})}function h(o={}){const{wrapper:e}=o.components||{};return e?t(e,Object.assign({},o,{children:t(n,o)})):n(o)}export{h as default,d as frontmatter,s as head};
