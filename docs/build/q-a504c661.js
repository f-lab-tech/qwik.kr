import{i as e,u as s}from"./q-c0df5510.js";const a={title:"Composing use Hooks",meta:[],styles:[],links:[]},c={title:"Composing use Hooks"};function n(t){const o=Object.assign({p:"p",code:"code"},t.components);return e(s,{children:[e(o.p,{children:"Hooks are a way to abstract common logic away from the components that use it. They are a way to share logic between components. While Qwik provides many hooks, there will always be one that is not provided out of the box. This tutorial will show you how to create your own hook."}),`
`,e(o.p,{children:["In this example, the registering of ",e(o.code,{children:"mousemove"})," events is something that could be shared between multiple components. Refactor the code by pulling out the code before JSX into its own ",e(o.code,{children:"useMousePosition()"})," function."]}),`
`,e(o.p,{children:"Congratulations, you have successfully created your own hook! You can now use it in any component that needs to listen to the mouse position."})]})}function r(t={}){const{wrapper:o}=t.components||{};return o?e(o,Object.assign({},t,{children:e(n,t)})):n(t)}export{r as default,c as frontmatter,a as head};
