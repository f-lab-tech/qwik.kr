import{i as n,u as s}from"./q-c0df5510.js";const r=[{text:"Parallelizing Network Requests",id:"parallelizing-network-requests",level:1},{text:"Avoiding Duplicate Requests",id:"avoiding-duplicate-requests",level:2},{text:"Reducing Network Waterfalls",id:"reducing-network-waterfalls",level:2}],o={title:"Qwik City Parallelizing Network Requests",meta:[],styles:[],links:[]},l={title:"Qwik City Parallelizing Network Requests"};function a(t){const e=Object.assign({h1:"h1",a:"a",span:"span",p:"p",h2:"h2",em:"em",pre:"pre",code:"code"},t.components);return n(s,{children:[n(e.h1,{id:"parallelizing-network-requests",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#parallelizing-network-requests",children:n(e.span,{className:"icon icon-link"})}),"Parallelizing Network Requests"]}),`
`,n(e.p,{children:["In the ",n(e.a,{href:"/qwikcity/prefetching/request-response-cache/",children:"Caching Request and Response Pairs"})," docs we explained the powerful combination of the ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Cache",children:"Cache"})," and ",n(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker",children:"Service Worker"})," APIs. However, we can take it even one step further by ensuring duplicate requests are not created for the same bundle, and we can prevent network waterfalls."]}),`
`,n(e.h2,{id:"avoiding-duplicate-requests",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#avoiding-duplicate-requests",children:n(e.span,{className:"icon icon-link"})}),"Avoiding Duplicate Requests"]}),`
`,n(e.p,{children:["For example, let's say an end-user currently has a slow 3G connection. When they first request the landing page, as fast as this slow network allows, the device downloads the HTML and renders the content (an area where Qwik really shines). On this slow connection, it'd be a shame if they'd have to also download a few more hundred kilobytes just to ",n(e.a,{href:"https://www.builder.io/blog/hydration-is-pure-overhead",children:"make their app work and become interactive"}),"."]}),`
`,n(e.p,{children:[`However, because the app was built with Qwik, the end-user doesn't need to download the entire application for it to become interactive. Instead, the end-user already downloaded the SSR rendered HTML app, and any interactive parts, such as an "Add to cart" button, can be prefetched immediately. Note that we're only prefetching the actual listener code, and `,n(e.em,{children:"not"})," the entire stack of the component tree render functions."]}),`
`,n(e.p,{children:["In this extremely common real-world example of a device with a slow connection, the device immediately starts to prefetch for the possible interactions that are visible by the end-user. However, due to their slow connection, even though we started to prefetch as soon as possible in a ",n(e.a,{href:"/qwikcity/prefetching/service-worker-prefetching/",children:"background thread"}),", the prefetch request itself could still be in flight."]}),`
`,n(e.p,{children:"For demo purposes, let's say the prefetching for this bundle takes two seconds. However, after one second of viewing the page, the user clicks on the button. In a traditional framework, there's a good chance that absolutely nothing would be happening! If the framework hasn't finished downloading, the app hasn't hydrated, the app hasn't re-rendered, and the event listener hasn't been added to the button yet. Sadly, the user's interaction would just be lost on a framework using hydration."}),`
`,n(e.p,{children:"However, with Qwik's prefetching and caching, if the user clicked the button, and we already started a request one second ago, and it has one second left until it's fully received, then the end-user only has to wait for one second. Remember, they're on a slow 3G connection for this demo. Luckily the user already received the full rendered landing page, so they're already looking at a completed page. Next, they're only prefetching the bits of the app they could interact with, and their slow connection is dedicated to just those bundle(s). This is in contrast to their slow connection downloading all of the apps, just to execute the one listener."}),`
`,n(e.p,{children:["Qwik is able to intercept requests for known bundles, and if a prefetch is already in flight, and then a user requests the same bundle, it'll ensure that the second request is able to re-use the initial one, which may already be done downloading. Doing any of this with the ",n(e.a,{href:"/qwikcity/prefetching/request-response-cache/#known-issues-with-link",children:"link"})," also shows why Qwik preferred to not make it the default, but instead use the ",n(e.a,{href:"/qwikcity/prefetching/request-response-cache/",children:"Caching API"}),"."]}),`
`,n(e.h2,{id:"reducing-network-waterfalls",children:[n(e.a,{"aria-hidden":"true",tabIndex:"-1",href:"#reducing-network-waterfalls",children:n(e.span,{className:"icon icon-link"})}),"Reducing Network Waterfalls"]}),`
`,n(e.p,{children:"A network waterfall is when numerous requests happen one after another, like steps downstairs, rather than in parallel. A waterfall of network requests will usually hurt performance because it increases the time until all modules are downloaded, rather than each module starting to download at the same time."}),`
`,n(e.p,{children:"Below is an example with three modules: A, B and C. Module A imports B, and B imports C. The HTML document is what starts the waterfall by first requesting Module A."}),`
`,n(e.pre,{children:n(e.code,{className:"language-ts",children:[n(e.span,{className:"token keyword",children:"import"})," ",n(e.span,{className:"token string",children:"'./b.js'"}),n(e.span,{className:"token punctuation",children:";"}),`
`,n(e.span,{className:"token builtin",children:"console"}),n(e.span,{className:"token punctuation",children:"."}),n(e.span,{className:"token function",children:"log"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token string",children:"'Module A'"}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`
`]})}),`
`,n(e.pre,{children:n(e.code,{className:"language-ts",children:[n(e.span,{className:"token keyword",children:"import"})," ",n(e.span,{className:"token string",children:"'./c.js'"}),n(e.span,{className:"token punctuation",children:";"}),`
`,n(e.span,{className:"token builtin",children:"console"}),n(e.span,{className:"token punctuation",children:"."}),n(e.span,{className:"token function",children:"log"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token string",children:"'Module B'"}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`
`]})}),`
`,n(e.pre,{children:n(e.code,{className:"language-ts",children:[n(e.span,{className:"token builtin",children:"console"}),n(e.span,{className:"token punctuation",children:"."}),n(e.span,{className:"token function",children:"log"}),n(e.span,{className:"token punctuation",children:"("}),n(e.span,{className:"token string",children:"'Module C'"}),n(e.span,{className:"token punctuation",children:")"}),n(e.span,{className:"token punctuation",children:";"}),`
`]})}),`
`,n(e.pre,{children:n(e.code,{className:"language-html",children:[n(e.span,{className:"token tag",children:[n(e.span,{className:"token tag",children:[n(e.span,{className:"token punctuation",children:"<"}),"script"]})," ",n(e.span,{className:"token attr-name",children:"type"}),n(e.span,{className:"token attr-value",children:[n(e.span,{className:"token punctuation attr-equals",children:"="}),n(e.span,{className:"token punctuation",children:'"'}),"module",n(e.span,{className:"token punctuation",children:'"'})]})," ",n(e.span,{className:"token attr-name",children:"src"}),n(e.span,{className:"token attr-value",children:[n(e.span,{className:"token punctuation attr-equals",children:"="}),n(e.span,{className:"token punctuation",children:'"'}),"./a.js",n(e.span,{className:"token punctuation",children:'"'})]}),n(e.span,{className:"token punctuation",children:">"})]}),n(e.span,{className:"token script"}),n(e.span,{className:"token tag",children:[n(e.span,{className:"token tag",children:[n(e.span,{className:"token punctuation",children:"</"}),"script"]}),n(e.span,{className:"token punctuation",children:">"})]}),`
`]})}),`
`,n(e.p,{children:["In this example, when Module ",n(e.code,{children:"A"})," is first requested, the browser has no idea that it should also start requesting Module ",n(e.code,{children:"B"})," and ",n(e.code,{children:"C"}),". It doesn't even know it needs to start requesting Module ",n(e.code,{children:"B"}),", until AFTER Module ",n(e.code,{children:"A"})," has finished downloading. It's a common problem in that the browser doesn't know ahead of time what it should start to request, until after each module has finished downloading."]}),`
`,n(e.p,{children:["However, because our service worker contains a module graph generated from the manifest, we do know all of the modules which ",n(e.em,{children:"will"})," be requested next. So when either user interaction or a prefetch for a bundle happens, the browser initiates the request for all of the bundles that ",n(e.em,{children:"will"})," be requested. This allows us to drastically reduce the time it takes to request all bundles."]})]})}function c(t={}){const{wrapper:e}=t.components||{};return e?n(e,Object.assign({},t,{children:n(a,t)})):a(t)}export{c as default,l as frontmatter,o as head,r as headings};
